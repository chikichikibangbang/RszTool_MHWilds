<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="CommonTheme.xaml" />
        <ResourceDictionary Source="Controls/ComboBox.xaml" />
        <ResourceDictionary Source="Controls/MenuItem.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <Color x:Key="PrimaryBackgroundColor">#333337</Color>
    <Color x:Key="PrimaryForegroundColor">#F1F1F1</Color>
    <Color x:Key="TextForegroundColor">#F1F1F1</Color>
    <Color x:Key="SelectedBackgroundColor">#2B3D4F</Color>
    <Color x:Key="PressedBackgroundColor">#195687</Color>
    <Color x:Key="ActiveBorderColor">#007ACC</Color>
    <Color x:Key="InactiveBorderColor">#A3A5AB</Color>
    <Color x:Key="DisabledBackgroundColor">#555555</Color>
    <Color x:Key="DisabledBorderColor">#686868</Color>
    <Color x:Key="DisabledForegroundColor">#808080</Color>

    <Color x:Key="{x:Static SystemColors.ControlLightLightColorKey}">#333337</Color>
    <Color x:Key="{x:Static SystemColors.ControlLightColorKey}">#464646</Color>
    <Color x:Key="{x:Static SystemColors.ControlColorKey}">#252526</Color>
    <Color x:Key="{x:Static SystemColors.ControlDarkColorKey}">#686868</Color>
    <Color x:Key="{x:Static SystemColors.ControlDarkDarkColorKey}">#9E9E9E</Color>
    <Color x:Key="{x:Static SystemColors.ControlTextColorKey}">#F1F1F1</Color>
    <Color x:Key="{x:Static SystemColors.GrayTextColorKey}">#999999</Color>
    <Color x:Key="{x:Static SystemColors.HighlightColorKey}">#3399FF</Color>
    <Color x:Key="{x:Static SystemColors.HighlightTextColorKey}">#FFFFFF</Color>
    <Color x:Key="{x:Static SystemColors.InfoTextColorKey}">#F1F1F1</Color>
    <Color x:Key="{x:Static SystemColors.InfoColorKey}">#333337</Color>
    <Color x:Key="{x:Static SystemColors.MenuColorKey}">#1B1B1C</Color>
    <Color x:Key="{x:Static SystemColors.MenuBarColorKey}">#1B1B1C</Color>
    <Color x:Key="{x:Static SystemColors.MenuTextColorKey}">#F1F1F1</Color>
    <Color x:Key="{x:Static SystemColors.WindowColorKey}">#333337</Color>
    <Color x:Key="{x:Static SystemColors.WindowTextColorKey}">#F1F1F1</Color>
    <Color x:Key="{x:Static SystemColors.ActiveCaptionColorKey}">#2D2D30</Color>
    <Color x:Key="{x:Static SystemColors.ActiveBorderColorKey}">#007ACC</Color>
    <Color x:Key="{x:Static SystemColors.ActiveCaptionTextColorKey}">#F1F1F1</Color>
    <Color x:Key="{x:Static SystemColors.InactiveCaptionColorKey}">#2D2D30</Color>
    <Color x:Key="{x:Static SystemColors.InactiveBorderColorKey}">#A3A5AB</Color>
    <Color x:Key="{x:Static SystemColors.InactiveCaptionTextColorKey}">#808080</Color>

    <SolidColorBrush x:Key="PrimaryBackground" Color="#333337"/>
    <SolidColorBrush x:Key="PrimaryForeground" Color="#F1F1F1"/>
    <SolidColorBrush x:Key="TextForeground" Color="#F1F1F1"/>
    <SolidColorBrush x:Key="SelectedBackground" Color="#2B3D4F"/>
    <SolidColorBrush x:Key="PressedBackground" Color="#195687"/>
    <SolidColorBrush x:Key="ActiveBorder" Color="#007ACC"/>
    <SolidColorBrush x:Key="InactiveBorder" Color="#A3A5AB"/>
    <SolidColorBrush x:Key="DisabledBackgroundBrush" Color="#555555"/>
    <SolidColorBrush x:Key="DisabledBorderBrush" Color="#686868"/>
    <SolidColorBrush x:Key="DisabledForegroundBrush" Color="#808080"/>
    <SolidColorBrush x:Key="ScrollBarBackground" Color="#2E2E2E"/>
    <!-- <SolidColorBrush x:Key="ScrollBarThumbBackground" Color="#4D4D4D"/>
    <SolidColorBrush x:Key="ScrollBarThumbPressBackground" Color="#999999"/> -->

    <SolidColorBrush x:Key="{x:Static SystemColors.ControlLightLightBrushKey}" Color="#333337" />
    <SolidColorBrush x:Key="{x:Static SystemColors.ControlLightBrushKey}" Color="#464646" />
    <SolidColorBrush x:Key="{x:Static SystemColors.ControlBrushKey}" Color="#252526" />
    <SolidColorBrush x:Key="{x:Static SystemColors.ControlDarkBrushKey}" Color="#686868" />
    <SolidColorBrush x:Key="{x:Static SystemColors.ControlDarkDarkBrushKey}" Color="#9E9E9E" />
    <SolidColorBrush x:Key="{x:Static SystemColors.ControlTextBrushKey}" Color="#F1F1F1" />
    <SolidColorBrush x:Key="{x:Static SystemColors.GrayTextBrushKey}" Color="#999999" />
    <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" Color="#195687" />
    <SolidColorBrush x:Key="{x:Static SystemColors.HighlightTextBrushKey}" Color="#FFFFFF" />
    <SolidColorBrush x:Key="{x:Static SystemColors.InfoTextBrushKey}" Color="#F1F1F1" />
    <SolidColorBrush x:Key="{x:Static SystemColors.InfoBrushKey}" Color="#333337" />
    <SolidColorBrush x:Key="{x:Static SystemColors.MenuBrushKey}" Color="#1B1B1C" />
    <SolidColorBrush x:Key="{x:Static SystemColors.MenuBarBrushKey}" Color="#1B1B1C" />
    <SolidColorBrush x:Key="{x:Static SystemColors.MenuTextBrushKey}" Color="#F1F1F1" />
    <SolidColorBrush x:Key="{x:Static SystemColors.WindowBrushKey}" Color="#333337" />
    <SolidColorBrush x:Key="{x:Static SystemColors.WindowTextBrushKey}" Color="#F1F1F1" />
    <SolidColorBrush x:Key="{x:Static SystemColors.ActiveCaptionBrushKey}" Color="#2D2D30" />
    <SolidColorBrush x:Key="{x:Static SystemColors.ActiveBorderBrushKey}" Color="#007ACC" />
    <SolidColorBrush x:Key="{x:Static SystemColors.ActiveCaptionTextBrushKey}" Color="#F1F1F1" />
    <SolidColorBrush x:Key="{x:Static SystemColors.InactiveCaptionBrushKey}" Color="#2D2D30" />
    <SolidColorBrush x:Key="{x:Static SystemColors.InactiveBorderBrushKey}" Color="#A3A5AB" />
    <SolidColorBrush x:Key="{x:Static SystemColors.InactiveCaptionTextBrushKey}" Color="#808080" />
    <!-- <SolidColorBrush x:Key="{x:Static SystemColors.InactiveSelectionHighlightTextBrushKey}" Color="{StaticResource PrimaryForeground}" /> -->

    <!-- Button -->
    <Style TargetType="{x:Type Button}">
        <Setter Property="Background" Value="{StaticResource PrimaryBackground}" />
        <Setter Property="BorderBrush" Value="{StaticResource InactiveBorder}" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border BorderThickness="1"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            Padding="{TemplateBinding Padding}">
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource SelectedBackground}" />
                <Setter Property="BorderBrush" Value="{StaticResource ActiveBorder}" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="{StaticResource PressedBackground}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- ToggleButton -->
    <Style TargetType="{x:Type ToggleButton}">
        <Setter Property="Background" Value="{StaticResource PrimaryBackground}" />
        <Setter Property="BorderBrush" Value="{StaticResource InactiveBorder}" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Border BorderThickness="1"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            Padding="{TemplateBinding Padding}">
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource SelectedBackground}" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="{StaticResource PressedBackground}" />
            </Trigger>
            <Trigger Property="IsChecked" Value="True">
                <Setter Property="BorderBrush" Value="{StaticResource ActiveBorder}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- CheckBox -->
    <Style TargetType="{x:Type CheckBox}">
        <Setter Property="Background" Value="{StaticResource PrimaryBackground}" />
        <Setter Property="BorderBrush" Value="{StaticResource InactiveBorder}"/>
        <Setter Property="Foreground" Value="{StaticResource ActiveBorder}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Stretch" >
                        <Border BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" Width="15" Height="15">
                            <Grid>
                                <Grid Background="{TemplateBinding Foreground}" Margin="1" Visibility="Collapsed" Name="nullBlock"/>
                                <Path Stretch="Uniform" Width="15" Height="10" Fill="{TemplateBinding Foreground}" Name="eliCheck" Data="F1 M 9.97498,1.22334L 4.6983,9.09834L 4.52164,9.09834L 0,5.19331L 1.27664,3.52165L 4.255,6.08833L 8.33331,1.52588e-005L 9.97498,1.22334 Z " Visibility="Collapsed"/>
                            </Grid>
                        </Border>
                        <TextBlock Margin="5,0,0,0" VerticalAlignment="Center" Foreground="White" Text="{TemplateBinding Content}"></TextBlock>
                    </StackPanel>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{StaticResource SelectedBackground}" />
                            <Setter Property="BorderBrush" Value="{StaticResource ActiveBorder}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="{StaticResource PressedBackground}" />
                            <Setter Property="Foreground" Value="{StaticResource ActiveBorder}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" Value="{StaticResource PrimaryBackground}" />
                            <Setter TargetName="eliCheck" Property="Opacity" Value="0.5" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="eliCheck" Property="Visibility" Value="Visible"></Setter>
                            <Setter Property="BorderBrush" Value="{StaticResource ActiveBorder}"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="{x:Null}">
                            <Setter TargetName="nullBlock" Property="Visibility" Value="Visible"></Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- TabItem -->
    <Style TargetType="{x:Type TabItem}">
        <Setter Property="Background" Value="{StaticResource PrimaryBackground}" />
        <Setter Property="Foreground" Value="{StaticResource PrimaryForeground}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabItem}">
                    <Grid>
                        <Border
                            Name="Border"
                            Margin="-1,0,0,-1"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{StaticResource InactiveBorder}"
                            BorderThickness="1,1,1,1"
                            CornerRadius="2,2,0,0">
                            <ContentPresenter x:Name="ContentSite"
                                VerticalAlignment="Center"
                                HorizontalAlignment="Center"
                                ContentSource="Header"
                                Margin="6,2,6,2"
                                RecognizesAccessKey="True"/>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Panel.ZIndex" Value="100" />
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource SelectedBackground}" />
                            <Setter TargetName="Border" Property="BorderThickness" Value="1,1,1,0" />
                            <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource ActiveBorder}" />
                            <Setter TargetName="Border" Property="Margin" Value="-1,-2,0,-1" />
                            <Setter TargetName="Border" Property="Padding" Value="0,2,0,1" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource SelectedBackground}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource DisabledBackgroundBrush}" />
                            <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource DisabledBorderBrush}" />
                            <Setter Property="Foreground" Value="{StaticResource DisabledForegroundBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--DATAGRID-->
    <Color x:Key="ThemeDG_BorderColor">#688CAF</Color>
    <SolidColorBrush x:Key="ThemeDG_Border" Color="{StaticResource ThemeDG_BorderColor}" />
    <Style TargetType="{x:Type DataGrid}" BasedOn="{StaticResource DefaultControlStyle}">
        <Setter Property="HorizontalGridLinesBrush" Value="{StaticResource InactiveBorder}" />
        <Setter Property="VerticalGridLinesBrush" Value="{StaticResource InactiveBorder}" />
        <Setter Property="BorderBrush" Value="{StaticResource ThemeDG_Border}" />
    </Style>

    <SolidColorBrush x:Key="ThemeDGHeader_Background" Color="{StaticResource PrimaryBackgroundColor}" />
    <SolidColorBrush x:Key="ThemeDGHeader_MouseOver" Color="{StaticResource SelectedBackgroundColor}" />
    <SolidColorBrush x:Key="ThemeDGHeader_Pressed" Color="{StaticResource PressedBackgroundColor}" />
    <SolidColorBrush x:Key="ThemeDGHeader_Sorted" Color="{StaticResource SelectedBackgroundColor}" />
    <SolidColorBrush x:Key="ThemeDGHeader_Border" Color="{StaticResource ThemeDG_BorderColor}" />
    <SolidColorBrush x:Key="ThemeDGHeader_MouseOverBorder" Color="{StaticResource ActiveBorderColor}" />
    <SolidColorBrush x:Key="ThemeDGHeader_PressedBorder" Color="{StaticResource ActiveBorderColor}" />
    <SolidColorBrush x:Key="ThemeDGHeader_SortedBorder" Color="{StaticResource ActiveBorderColor}" />
    <!--DATAGRID HEADER-->
    <Style x:Key="ColumnHeaderGripperStyle" TargetType="{x:Type Thumb}">
        <Setter Property="Width" Value="8"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Cursor" Value="SizeWE"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Border Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="{x:Type DataGridColumnHeader}">
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridColumnHeader}">
                    <Grid>
                        <Border x:Name="BR"
                                BorderThickness="1,0,1,1"
                                Padding="4,4,4,2"
                                BorderBrush="{StaticResource ThemeDGHeader_Border}"
                                Background="{StaticResource ThemeDGHeader_Background}">
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </Border>
                        <Path x:Name="SortArrow"
                              HorizontalAlignment="Center" VerticalAlignment="Top"
                              Width="7" Height="4" Margin="0,1,0,0"
                              Stretch="Fill"
                              RenderTransformOrigin="0.5,0.5"
                              Visibility="Visible"
                              Data="M0,0 L1,0 0.5,1 z" >
                            <Path.Fill>
                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0,0">
                                    <GradientStop Color="#FF9DC3D8" Offset="1"/>
                                    <GradientStop Color="#FF7AA8C4" Offset="0.403"/>
                                    <GradientStop Color="#FF4B7085" Offset="0.017"/>
                                </LinearGradientBrush>
                            </Path.Fill>
                        </Path>
                        <Thumb x:Name="PART_LeftHeaderGripper" HorizontalAlignment="Left" Style="{StaticResource ColumnHeaderGripperStyle}"/>
                        <Thumb x:Name="PART_RightHeaderGripper" HorizontalAlignment="Right" Style="{StaticResource ColumnHeaderGripperStyle}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="SortDirection" Value="{x:Null}">
                            <Setter TargetName="SortArrow" Property="Visibility" Value="Collapsed"/>
                        </Trigger>
                        <Trigger Property="SortDirection" Value="Ascending">
                            <Setter TargetName="SortArrow" Property="Visibility" Value="Visible"/>
                            <Setter TargetName="SortArrow" Property="RenderTransform">
                                <Setter.Value>
                                    <TransformGroup>
                                        <ScaleTransform ScaleY="-1"/>
                                    </TransformGroup>
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="BR" Property="Border.Background" Value="{StaticResource ThemeDGHeader_Sorted}"/>
                            <Setter TargetName="BR" Property="Border.BorderBrush" Value="{StaticResource ThemeDGHeader_SortedBorder}"/>
                        </Trigger>
                        <Trigger Property="SortDirection" Value="Descending">
                            <Setter TargetName="SortArrow" Property="Visibility" Value="Visible"/>
                            <Setter TargetName="BR" Property="Border.Background" Value="{StaticResource ThemeDGHeader_Sorted}"/>
                            <Setter TargetName="BR" Property="Border.BorderBrush" Value="{StaticResource ThemeDGHeader_SortedBorder}"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="BR" Property="Border.Background" Value="{StaticResource ThemeDGHeader_MouseOver}"/>
                            <Setter TargetName="BR" Property="Border.BorderBrush" Value="{StaticResource ThemeDGHeader_MouseOverBorder}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="BR" Property="Border.Background" Value="{StaticResource ThemeDGHeader_Pressed}" />
                            <Setter TargetName="BR" Property="Border.BorderBrush" Value="{StaticResource ThemeDGHeader_PressedBorder}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="DataGridRowHeader">
        <Setter Property="Background" Value="{StaticResource PrimaryBackground}" />
        <Setter Property="Width" Value="0" />
    </Style>

    <Style TargetType="{x:Type DataGridCell}">
        <Style.Triggers>
            <Trigger Property="DataGridCell.IsSelected" Value="True">
                <Setter Property="Background" Value="{StaticResource SelectedBackground}" />
                <Setter Property="Foreground" Value="{StaticResource PrimaryForeground}" />
                <Setter Property="BorderBrush" Value="{StaticResource ActiveBorder}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- ScrollBar -->
    <Style TargetType="ScrollBar">
        <Setter Property="Background" Value="{StaticResource ScrollBarBackground}" />
    </Style>

    <!-- ContextMenu -->
    <Style TargetType="{x:Type ContextMenu}" BasedOn="{StaticResource DefaultControlStyle}">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Grid.IsSharedSizeScope" Value="true" />
        <Setter Property="HasDropShadow" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
            <ControlTemplate TargetType="{x:Type ContextMenu}">
                <Border x:Name="Border"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{StaticResource InactiveBorder}"
                        BorderThickness="1">
                <StackPanel IsItemsHost="True"
                            KeyboardNavigation.DirectionalNavigation="Cycle" />
                </Border>
                <ControlTemplate.Triggers>
                <Trigger Property="HasDropShadow" Value="true">
                    <Setter TargetName="Border" Property="Padding" Value="0,3,0,3" />
                    <Setter TargetName="Border" Property="CornerRadius" Value="2" />
                </Trigger>
                </ControlTemplate.Triggers>
            </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="ToolBarTray">
        <Setter Property="Background" Value="{StaticResource DisabledBorderBrush}" />
    </Style>

    <ContextMenu x:Key="TextBoxContextMenu">
        <MenuItem Command="ApplicationCommands.Copy" />
        <MenuItem Command="ApplicationCommands.Cut" />
        <MenuItem Command="ApplicationCommands.Paste" />
    </ContextMenu>
    <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource DefaultControlStyle}">
        <Setter Property="ContextMenu" Value="{StaticResource TextBoxContextMenu}" />
    </Style>
</ResourceDictionary>